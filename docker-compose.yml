services:
  postgres-auth:
    image: postgres:16-alpine
    container_name: postgres-auth
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports: ["5433:5432"]
    volumes: [auth-data:/var/lib/postgresql/data]
    networks: [clinic-network]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports: ["5672:5672", "15672:15672"]
    networks: [clinic-network]
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports: ["9411:9411"]
    networks: [clinic-network]
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9411/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  auth-service:
    build:
      # ← N O V O : o contexto é a raiz (onde está o POM pai)
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    ports: ["8081:8081"]
    depends_on: [postgres-auth]
    networks: [clinic-network]
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  auth-data:

networks:
  clinic-network:
    driver: bridge
